{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "andr_receive"
      ],
      "properties": {
        "andr_receive": {
          "$ref": "#/definitions/AndromedaMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Mint a new receipt. Only executable by the assigned `minter` address. Generates a receipt ID.",
      "type": "object",
      "required": [
        "store_receipt"
      ],
      "properties": {
        "store_receipt": {
          "type": "object",
          "required": [
            "receipt"
          ],
          "properties": {
            "receipt": {
              "$ref": "#/definitions/Receipt"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Edit a receipt by ID. Only executable by the assigned `minter` address or a valid `operator`.",
      "type": "object",
      "required": [
        "edit_receipt"
      ],
      "properties": {
        "edit_receipt": {
          "type": "object",
          "required": [
            "receipt",
            "receipt_id"
          ],
          "properties": {
            "receipt": {
              "$ref": "#/definitions/Receipt"
            },
            "receipt_id": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "ADORecipient": {
      "description": "ADOs use a default Receive message for handling funds, this struct states that the recipient is an ADO and may attach the data field to the Receive message",
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "description": "Addr can also be a human-readable identifier used in a app contract.",
          "allOf": [
            {
              "$ref": "#/definitions/AndrAddress"
            }
          ]
        },
        "msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "AndrAddress": {
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "identifier": {
          "description": "Can be either an address or identifier of an ADO in a app.",
          "type": "string"
        }
      }
    },
    "AndromedaMsg": {
      "oneOf": [
        {
          "description": "Standard Messages",
          "type": "object",
          "required": [
            "receive"
          ],
          "properties": {
            "receive": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Binary"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_owner"
          ],
          "properties": {
            "update_owner": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_operators"
          ],
          "properties": {
            "update_operators": {
              "type": "object",
              "required": [
                "operators"
              ],
              "properties": {
                "operators": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_app_contract"
          ],
          "properties": {
            "update_app_contract": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw"
          ],
          "properties": {
            "withdraw": {
              "type": "object",
              "properties": {
                "recipient": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Recipient"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "tokens_to_withdraw": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "$ref": "#/definitions/Withdrawal"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "register_module"
          ],
          "properties": {
            "register_module": {
              "type": "object",
              "required": [
                "module"
              ],
              "properties": {
                "module": {
                  "$ref": "#/definitions/Module"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "deregister_module"
          ],
          "properties": {
            "deregister_module": {
              "type": "object",
              "required": [
                "module_idx"
              ],
              "properties": {
                "module_idx": {
                  "$ref": "#/definitions/Uint64"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "alter_module"
          ],
          "properties": {
            "alter_module": {
              "type": "object",
              "required": [
                "module",
                "module_idx"
              ],
              "properties": {
                "module": {
                  "$ref": "#/definitions/Module"
                },
                "module_idx": {
                  "$ref": "#/definitions/Uint64"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "refresh_address"
          ],
          "properties": {
            "refresh_address": {
              "type": "object",
              "required": [
                "contract"
              ],
              "properties": {
                "contract": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "refresh_addresses"
          ],
          "properties": {
            "refresh_addresses": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint32",
                  "minimum": 0.0
                },
                "start_after": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Attribute": {
      "description": "An key value pair that is used in the context of event attributes in logs",
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Event": {
      "description": "A full [*Cosmos SDK* event].\n\nThis version uses string attributes (similar to [*Cosmos SDK* StringEvent]), which then get magically converted to bytes for Tendermint somewhere between the Rust-Go interface, JSON deserialization and the `NewEvent` call in Cosmos SDK.\n\n[*Cosmos SDK* event]: https://docs.cosmos.network/master/core/events.html [*Cosmos SDK* StringEvent]: https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/base/abci/v1beta1/abci.proto#L56-L70",
      "type": "object",
      "required": [
        "attributes",
        "type"
      ],
      "properties": {
        "attributes": {
          "description": "The attributes to be included in the event.\n\nYou can learn more about these from [*Cosmos SDK* docs].\n\n[*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "type": {
          "description": "The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.",
          "type": "string"
        }
      }
    },
    "Module": {
      "description": "A struct describing a token module, provided with the instantiation message this struct is used to record the info about the module and how/if it should be instantiated",
      "type": "object",
      "required": [
        "address",
        "is_mutable",
        "module_type"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/AndrAddress"
        },
        "is_mutable": {
          "type": "boolean"
        },
        "module_type": {
          "type": "string"
        }
      }
    },
    "Receipt": {
      "description": "A struct representation of a receipt. Contains a vector of CosmWasm [Event](https://docs.rs/cosmwasm-std/0.16.0/cosmwasm_std/struct.Event.html) structs.",
      "type": "object",
      "required": [
        "events"
      ],
      "properties": {
        "events": {
          "description": "A vector of CosmWasm [Event](https://docs.rs/cosmwasm-std/0.16.0/cosmwasm_std/struct.Event.html) structs related to the receipt",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        }
      }
    },
    "Recipient": {
      "oneOf": [
        {
          "description": "An address that is not another ADO. It is assumed that it is a valid address.",
          "type": "object",
          "required": [
            "addr"
          ],
          "properties": {
            "addr": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "a_d_o"
          ],
          "properties": {
            "a_d_o": {
              "$ref": "#/definitions/ADORecipient"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    },
    "Withdrawal": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        },
        "withdrawal_type": {
          "anyOf": [
            {
              "$ref": "#/definitions/WithdrawalType"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "WithdrawalType": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "percentage"
          ],
          "properties": {
            "percentage": {
              "$ref": "#/definitions/Decimal"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
